#!/bin/sh

# https://stackoverflow.com/questions/59895/how-do-i-get-the-directory-where-a-bash-script-is-located-from-within-the-script
SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

. ${SCRIPT_DIR}/vars

args=`getopt w: $*`

if [ $? -ne 0 ]; then
  echo "usage: $0 [-w workdir] command"
  exit 1
fi

set -- $args

while :; do
  case "$1" in
    -w)
      WORKDIR=${2}
      shift; shift
      ;;
    --)
        shift; break
        ;;
  esac
done

echo $WORKDIR

set -e

CMD=$*

if [ -z "$CMD" ]; then
  echo "üòê You should specify a command to run e.g. $0 ls -l"
  exit 1
fi
if [ "$CMD" = "help" ] || [ "$CMD" = "--help" ] || [ "$CMD" = "-h" ]; then
  echo "USAGE"
  echo "  $0 command"
  echo
  echo "EXAMPLES"
  echo
  echo "  $0 ls -ltr # run ls -ltr inside the running container"
  echo "  $0 make    # run make inside the running container"
  exit 0
fi
container_id=`docker ps --no-trunc  --filter ancestor=${ACCOUNT}/${REPO}:${TAG} --format "{{.ID}}"`

if [ -z $container_id ]; then
  echo "üò¶ The container is not running. Try doing bin/start in another terminal"
  exit 1
else
  if [ -z $WORKDIR ]; then
    echo "üöÇ Running '$CMD' inside container with id '$container_id'"
    docker exec -it $container_id $CMD
  else
    echo "üöÇ Running '$CMD' in '$WORKDIR' inside container with id '$container_id'"
    docker exec -w /root/work/$WORKDIR -it $container_id $CMD
  fi
fi

# vim: ft=bash
